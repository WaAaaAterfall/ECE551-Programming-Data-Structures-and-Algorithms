Grading at 12/08/2022:22:59:21.738260
For commit ID c1fa7d4a9444a16241c1af6ed482e0a21cdbd601
Grading at Thu Dec  8 05:58:59 PM EST 2022
Doing some basic checking for your submission

Step 1
Checking that cyoa-step1 compiles
rm -f *~ cyoa-step1 cyoa-step2 cyoa-step3 cyoa-step4  cyoa-step1.o  cyoa-step2.o  cyoa-step3.o  cyoa-step4.o
g++ -o cyoa-step1 -ggdb3 -Wall -Werror -pedantic -std=gnu++98 cyoa-step1.cpp util.cpp
The code compiled (good)
Executable cyoa-step1 exists (good)
------------------------------------
Now running YOUR tests for step 1
------------------------------------


1.1: Current test is ./cyoa-step1 /usr/local/ece551/cyoa/story1 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


1.2: Current test is ./cyoa-step1 /usr/local/ece551/cyoa/story2 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


1.3: Current test is ./cyoa-step1 storyTest < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
This story contains undefined page (not N, W nor L).
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.4: Current test is ./cyoa-step1 storyTest2 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
The story contains page declaration line that its page file cannot be opened.
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.5: Current test is ./cyoa-step1 storyTest3 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
This story contains invalid Page number.
The choice cannot be matched with the current page.
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1991742== Memcheck, a memory error detector
==1991742== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1991742== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1991742== Command: ./cyoa-step1 storyTest3
==1991742== Parent PID: 1991741
==1991742== 
==1991742== Conditional jump or move depends on uninitialised value(s)
==1991742==    at 0x10C99B: Story::Story(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Story.hpp:127)
==1991742==    by 0x10E618: main (cyoa-step1.cpp:16)
==1991742== 
==1991742== 
==1991742== HEAP SUMMARY:
==1991742==     in use at exit: 14,306 bytes in 62 blocks
==1991742==   total heap usage: 228 allocs, 166 frees, 123,817 bytes allocated
==1991742== 
==1991742== For a detailed leak analysis, rerun with: --leak-check=full
==1991742== 
==1991742== Use --track-origins=yes to see where uninitialised values come from
==1991742== For lists of detected and suppressed errors, rerun with: -s
==1991742== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


1.6: Current test is ./cyoa-step1 storyTest4 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
The current page of the choice shows up before the page declaration.
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.7: Current test is ./cyoa-step1 storyTest5 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


1.8: Current test is ./cyoa-step1 storyTest6 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


1.9: Current test is ./cyoa-step1 storyTest7 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
The choice cannot be matched with the current page.
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.10: Current test is ./cyoa-step1 storyTest8 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
This story contains invalid Page number.
The choice cannot be matched with the current page.
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1992107== Memcheck, a memory error detector
==1992107== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1992107== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1992107== Command: ./cyoa-step1 storyTest8
==1992107== Parent PID: 1992106
==1992107== 
==1992107== Conditional jump or move depends on uninitialised value(s)
==1992107==    at 0x10C99B: Story::Story(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Story.hpp:127)
==1992107==    by 0x10E618: main (cyoa-step1.cpp:16)
==1992107== 
==1992107== 
==1992107== HEAP SUMMARY:
==1992107==     in use at exit: 11,562 bytes in 33 blocks
==1992107==   total heap usage: 108 allocs, 75 frees, 107,300 bytes allocated
==1992107== 
==1992107== For a detailed leak analysis, rerun with: --leak-check=full
==1992107== 
==1992107== Use --track-origins=yes to see where uninitialised values come from
==1992107== For lists of detected and suppressed errors, rerun with: -s
==1992107== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


1.11: Current test is ./cyoa-step1 storyTest9 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
The current page of the choice shows up before the page declaration.
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.12: Current test is ./cyoa-step1 storyTest10 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
The win page of the story has choices, but it shouldn't.
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.13: Current test is ./cyoa-step1 storyTest11 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
The lose page of the story has choices, but it shouldn't.
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.14: Current test is ./cyoa-step1 storyTest12 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


1.15: Current test is ./cyoa-step1 storyTest13 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


1.16: Current test is ./cyoa-step1 storyTest14 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


1.17: Current test is ./cyoa-step1 storyTest15 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
The pages in this story are not consecutive.
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.18: Current test is ./cyoa-step1 storyTest16 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 1

Step 2
Checking that cyoa-step2 compiles
rm -f *~ cyoa-step1 cyoa-step2 cyoa-step3 cyoa-step4  cyoa-step1.o  cyoa-step2.o  cyoa-step3.o  cyoa-step4.o
g++ -o cyoa-step2 -ggdb3 -Wall -Werror -pedantic -std=gnu++98 cyoa-step2.cpp util.cpp
The code compiled (good)
Executable cyoa-step2 exists (good)
------------------------------------
Now running YOUR tests for step 2
------------------------------------
No request to check for intermediate deadline completion on step 2

Step 3
Checking that cyoa-step3 compiles
rm -f *~ cyoa-step1 cyoa-step2 cyoa-step3 cyoa-step4  cyoa-step1.o  cyoa-step2.o  cyoa-step3.o  cyoa-step4.o
g++ -o cyoa-step3 -ggdb3 -Wall -Werror -pedantic -std=gnu++98 cyoa-step3.cpp util.cpp
The code compiled (good)
Executable cyoa-step3 exists (good)
------------------------------------
Now running YOUR tests for step 3
------------------------------------
No request to check for intermediate deadline completion on step 3

Step 4
Checking that cyoa-step4 compiles
rm -f *~ cyoa-step1 cyoa-step2 cyoa-step3 cyoa-step4  cyoa-step1.o  cyoa-step2.o  cyoa-step3.o  cyoa-step4.o
g++ -o cyoa-step4 -ggdb3 -Wall -Werror -pedantic -std=gnu++98 cyoa-step4.cpp util.cpp
The code compiled (good)
Executable cyoa-step4 exists (good)
------------------------------------
Now running YOUR tests for step 4
------------------------------------
No request to check for intermediate deadline completion on step 4

You have NOT passed your test cases!
You should go and figure out/understand where thing went wrong
And fix the problem(s) before the deadline

Overall Grade: NO GRADE YET
